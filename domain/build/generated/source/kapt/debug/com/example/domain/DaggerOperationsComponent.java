// Generated by Dagger (https://dagger.dev).
package com.example.domain;

import com.example.domain.operations.OperationFactory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerOperationsComponent implements OperationsComponent {
  private final DomainModule domainModule;

  private DaggerOperationsComponent(DomainModule domainModuleParam) {
    this.domainModule = domainModuleParam;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationFactory getOperationFactory() {
    return DomainModule_ProvideOperationFactoryFactory.provideOperationFactory(domainModule);
  }

  public static final class Builder {
    private DomainModule domainModule;

    private Builder() {
    }

    public Builder domainModule(DomainModule domainModule) {
      this.domainModule = Preconditions.checkNotNull(domainModule);
      return this;
    }

    public OperationsComponent build() {
      Preconditions.checkBuilderRequirement(domainModule, DomainModule.class);
      return new DaggerOperationsComponent(domainModule);
    }
  }
}
