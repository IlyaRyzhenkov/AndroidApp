// Generated by view binder compiler. Do not edit!
package com.example.presentation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.presentation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HabitListElementBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView habitCounter;

  @NonNull
  public final TextView habitDescription;

  @NonNull
  public final TextView habitName;

  @NonNull
  public final TextView habitPeriod;

  @NonNull
  public final TextView habitPriority;

  @NonNull
  public final TextView habitType;

  @NonNull
  public final Guideline listItemGuideine1;

  @NonNull
  public final Guideline listItemGuideine2;

  private HabitListElementBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView habitCounter, @NonNull TextView habitDescription,
      @NonNull TextView habitName, @NonNull TextView habitPeriod, @NonNull TextView habitPriority,
      @NonNull TextView habitType, @NonNull Guideline listItemGuideine1,
      @NonNull Guideline listItemGuideine2) {
    this.rootView = rootView;
    this.habitCounter = habitCounter;
    this.habitDescription = habitDescription;
    this.habitName = habitName;
    this.habitPeriod = habitPeriod;
    this.habitPriority = habitPriority;
    this.habitType = habitType;
    this.listItemGuideine1 = listItemGuideine1;
    this.listItemGuideine2 = listItemGuideine2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HabitListElementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HabitListElementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.habit_list_element, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HabitListElementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.habit_counter;
      TextView habitCounter = ViewBindings.findChildViewById(rootView, id);
      if (habitCounter == null) {
        break missingId;
      }

      id = R.id.habit_description;
      TextView habitDescription = ViewBindings.findChildViewById(rootView, id);
      if (habitDescription == null) {
        break missingId;
      }

      id = R.id.habit_name;
      TextView habitName = ViewBindings.findChildViewById(rootView, id);
      if (habitName == null) {
        break missingId;
      }

      id = R.id.habit_period;
      TextView habitPeriod = ViewBindings.findChildViewById(rootView, id);
      if (habitPeriod == null) {
        break missingId;
      }

      id = R.id.habit_priority;
      TextView habitPriority = ViewBindings.findChildViewById(rootView, id);
      if (habitPriority == null) {
        break missingId;
      }

      id = R.id.habit_type;
      TextView habitType = ViewBindings.findChildViewById(rootView, id);
      if (habitType == null) {
        break missingId;
      }

      id = R.id.list_item_guideine1;
      Guideline listItemGuideine1 = ViewBindings.findChildViewById(rootView, id);
      if (listItemGuideine1 == null) {
        break missingId;
      }

      id = R.id.list_item_guideine2;
      Guideline listItemGuideine2 = ViewBindings.findChildViewById(rootView, id);
      if (listItemGuideine2 == null) {
        break missingId;
      }

      return new HabitListElementBinding((ConstraintLayout) rootView, habitCounter,
          habitDescription, habitName, habitPeriod, habitPriority, habitType, listItemGuideine1,
          listItemGuideine2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
